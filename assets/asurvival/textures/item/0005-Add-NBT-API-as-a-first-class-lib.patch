From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: tr7zw <tr7zw@live.de>
Date: Thu, 2 Apr 2020 18:49:56 +0200
Subject: [PATCH] Add NBT-API as a first-class lib


diff --git a/pom.xml b/pom.xml
index 1d705769fb9d7764c1b9e4a16e791cd7764dcc50..897f536837bd33e25c7a1a0f7a2c6bc8575291c9 100644
--- a/pom.xml
+++ b/pom.xml
@@ -43,6 +43,11 @@
             <id>mojang</id>
             <url>https://libraries.minecraft.net/</url>
         </repository>
+        <!-- CodeMC -->
+        <repository>
+            <id>codemc-repo</id>
+            <url>https://repo.codemc.org/repository/maven-public/</url>
+        </repository>
     </repositories>
 
     <pluginRepositories>
@@ -157,6 +162,11 @@
             <artifactId>asm-commons</artifactId>
             <version>8.0.1</version>
         </dependency>
+        <dependency>
+            <groupId>de.tr7zw</groupId>
+            <artifactId>item-nbt-api</artifactId>
+            <version>2.4.1</version>
+        </dependency>
     </dependencies>
 
     <build>
@@ -232,6 +242,12 @@
                     <dependencyReducedPomLocation>${project.build.directory}/dependency-reduced-pom.xml</dependencyReducedPomLocation>
                     <!-- when downloading via Maven we can pull depends individually -->
                     <shadedArtifactAttached>true</shadedArtifactAttached>
+                    <relocations>
+                        <relocation>
+                            <pattern>de.tr7zw.changeme.nbtapi</pattern>
+                            <shadedPattern>de.tr7zw.nbtapi</shadedPattern>
+                        </relocation>
+                    </relocations>
                 </configuration>
             </plugin>
             <plugin>
diff --git a/src/main/java/org/bukkit/block/TileState.java b/src/main/java/org/bukkit/block/TileState.java
index 3b10fcc13893403b29f0260b8605144679e89b82..b687c950e415ed92a46b6ab59f5a51b6225d9273 100644
--- a/src/main/java/org/bukkit/block/TileState.java
+++ b/src/main/java/org/bukkit/block/TileState.java
@@ -4,6 +4,9 @@ import org.bukkit.persistence.PersistentDataContainer;
 import org.bukkit.persistence.PersistentDataHolder;
 import org.jetbrains.annotations.NotNull;
 
+import de.tr7zw.changeme.nbtapi.NBTCompound;
+import de.tr7zw.changeme.nbtapi.NBTTileEntity;
+
 /**
  * Represents a block state that also hosts a tile entity at the given location.
  *
@@ -36,4 +39,26 @@ public interface TileState extends BlockState, PersistentDataHolder {
     @NotNull
     @Override
     PersistentDataContainer getPersistentDataContainer();
+
+    // YAPFA start
+    /**
+     * Returns {@link NBTCompound} representation
+     * of this tile entity.
+     *
+     * @return vanilla NBT tags container
+     */
+    default NBTTileEntity getNBT() {
+        return new NBTTileEntity(this);
+    }
+
+    /**
+     * Returns a custom tag container of this tile entity.
+     *
+     * @return custom NBT tags container
+     * @see NBTTileEntity#getPersistentDataContainer()
+     */
+    default NBTCompound getNBTC() {
+        return getNBT().getPersistentDataContainer();
+    }
+    // YAPFA end
 }
diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index 7808ade92ccd3553056c57cdf77464fb8bdf9312..54ad210662a8b2e7bee00cf5e395eb4de30e3e66 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -23,6 +23,9 @@ import org.jetbrains.annotations.Contract;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
+import de.tr7zw.changeme.nbtapi.NBTCompound;
+import de.tr7zw.changeme.nbtapi.NBTEntity;
+
 /**
  * Represents a base entity in the world
  */
@@ -695,4 +698,26 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
      */
     public boolean isInLava();
     // Paper end
+
+    // YAPFA start
+    /**
+     * Returns {@link NBTCompound} representation
+     * of this tile entity.
+     *
+     * @return vanilla NBT tags container
+     */
+    default NBTEntity getNBT() {
+        return new NBTEntity(this);
+    }
+
+    /**
+     * Returns a custom tag container of this tile entity.
+     *
+     * @return custom NBT tags container
+     * @see NBTEntity#getPersistentDataContainer()
+     */
+    default NBTCompound getNBTC() {
+        return getNBT().getPersistentDataContainer();
+    }
+    // YAPFA end
 }
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index ccd81fca25233c2a9c2a8c3f4dda3053d7b2e723..37d2b1531a55bcbe01b5b08c0b08a0abd78f4cba 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -1,6 +1,10 @@
 package org.bukkit.inventory;
 
 import com.google.common.collect.ImmutableMap;
+
+import de.tr7zw.changeme.nbtapi.NBTCompound;
+import de.tr7zw.changeme.nbtapi.NBTItem;
+
 import java.util.LinkedHashMap;
 import java.util.List; // Paper
 import java.util.Map;
@@ -791,4 +795,27 @@ public class ItemStack implements Cloneable, ConfigurationSerializable {
         return itemMeta.hasItemFlag(flag);
     }
     // Paper end
+    
+    // YAPFA start
+    /**
+     * Returns {@link NBTCompound} representation
+     * of this item.
+     *
+     * @return NBT tags container
+     */
+    public NBTItem getNBT() {
+    	return new NBTItem(this);
+    }
+
+    /**
+     * Changes NBT of the item to the provided.
+     */
+    public void setNBT(NBTItem nbt) {
+    	ItemStack nbtItem = nbt.getItem();
+    	setType(nbtItem.getType());
+    	setAmount(nbtItem.getAmount());
+    	setData(nbtItem.getData());
+    	setItemMeta(nbtItem.getItemMeta());
+    }
+    // YAPFA end
 }
